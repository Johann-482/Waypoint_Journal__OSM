Index: app/src/main/java/com/example/waypointjournalosm/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/waypointjournalosm/MainActivity.kt b/app/src/main/java/com/example/waypointjournalosm/MainActivity.kt
--- a/app/src/main/java/com/example/waypointjournalosm/MainActivity.kt	
+++ b/app/src/main/java/com/example/waypointjournalosm/MainActivity.kt	(date 1728737026164)
@@ -1,11 +1,6 @@
 package com.example.waypointjournalosm
 
-import android.content.Intent
 import android.view.View
-import android.view.animation.Animation
-import android.view.animation.AnimationUtils
-import android.widget.ImageView
-import android.widget.LinearLayout
 import android.os.Bundle
 import androidx.appcompat.app.AppCompatActivity
 import org.osmdroid.config.Configuration
@@ -14,32 +9,45 @@
 import org.osmdroid.util.GeoPoint
 import org.osmdroid.views.MapView
 import org.osmdroid.views.overlay.Marker
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import android.widget.ImageButton
+import android.widget.Button
+import android.widget.TextView
+import androidx.preference.PreferenceManager
 
 class MainActivity : AppCompatActivity() {
 
-    private lateinit var checklistLayout: LinearLayout
-    private lateinit var arrowIcon: ImageView
-    private var isChecklistVisible = false
-    private lateinit var mapView: MapView
+    private lateinit var mapContainer: MapView
+    private val restaurantList = mutableListOf<Restaurant>()
+    private lateinit var checklistOverlay: RecyclerView
+    private lateinit var restaurantDetailsLayout: View
+    private lateinit var restaurantNameTextView: TextView
+    private lateinit var restaurantMenuTextView: TextView
+    private lateinit var addToChecklistButton: Button
+    private lateinit var toggleChecklistButton: ImageButton
+    private var isChecklistVisible: Boolean = false
+    private val checklistAdapter = ChecklistAdapter()
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
+        Configuration.getInstance().load(this, PreferenceManager.getDefaultSharedPreferences(this))
         setContentView(R.layout.activity_main)
 
         // Initialize OSMDroid
         Configuration.getInstance().load(this, getSharedPreferences("osm_prefs", MODE_PRIVATE))
 
         // Set up the MapView
-        mapView = findViewById(R.id.osm_map)
-        mapView.setTileSource(TileSourceFactory.MAPNIK)
-        mapView.setMultiTouchControls(true)
+        mapContainer = findViewById(R.id.mapContainer)
+        mapContainer.setTileSource(TileSourceFactory.MAPNIK)
+        mapContainer.setMultiTouchControls(true)
 
         // Define the geo-coordinates for Burnham Park
         val burnhamParkCenter = GeoPoint(16.411019, 120.595149)
 
         // Set the initial view to center on Burnham Park
-        mapView.controller.setZoom(16.0)
-        mapView.controller.setCenter(burnhamParkCenter)
+        mapContainer.controller.setZoom(16.0)
+        mapContainer.controller.setCenter(burnhamParkCenter)
 
         // Restrict the map to a bounding box around Burnham Park
         val boundingBox = BoundingBox(
@@ -48,14 +56,14 @@
             16.409221,  // South boundary (lat)
             120.591379  // West boundary (lon)
         )
-        mapView.setScrollableAreaLimitDouble(boundingBox)
+        mapContainer.setScrollableAreaLimitDouble(boundingBox)
 
         // Add a marker on Burnham Park
-        val marker = Marker(mapView)
+        val marker = Marker(mapContainer)
         marker.position = burnhamParkCenter
         marker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_BOTTOM)
         marker.title = "Burnham Park"
-        mapView.overlays.add(marker)
+        mapContainer.overlays.add(marker)
 
         /* Set click listeners for the icons
         findViewById<ImageView>(R.id.icon1).setOnClickListener {
@@ -73,23 +81,88 @@
             startActivity(intent)
         }
          */
-        checklistLayout = findViewById(R.id.checklistLayout)
-        arrowIcon = findViewById(R.id.arrowIcon)
+        checklistOverlay = findViewById(R.id.checklistRecyclerView)
+        checklistAdapter = ChecklistAdapter(restaurantList) { restaurant ->
+            handleRestaurantSelection(restaurant)
+        }
+        checklistOverlay.layoutManager = LinearLayoutManager(this)
+        checklistOverlay.adapter = checklistAdapter
+
+        mapContainer = findViewById(R.id.mapContainer)
+        mapContainer.setTileSource(TileSourceFactory.MAPNIK) // Use the OSM Mapnik tile source
+        mapContainer.setBuiltInZoomControls(true)
+        mapContainer.setMultiTouchControls(true)
+
+        // Add markers to the map
+        addMarker("Restaurant 1", 13.411019, 122.595149)
+        addMarker("Restaurant 2", 18.411019, 117.595149)
+
+        toggleChecklistButton = findViewById(R.id.toggleChecklistButton)
+        checklistOverlay.visibility = View.GONE
+        toggleChecklistButton.setOnClickListener {
+            toggleChecklistVisibility()
+        }
+    }
+    private fun addMarker(name: String, latitude: Double, longitude: Double) {
+        val marker = Marker(mapContainer)
+        marker.position = GeoPoint(latitude, longitude)
+        marker.title = name
+        marker.setOnMarkerClickListener { _, _ ->
+            onMarkerClick(marker.title)
+            true
+        }
+        mapContainer.overlays.add(marker)
+        mapContainer.invalidate() // Refresh the map to display the marker
+    }
+
+    private fun addRestaurant(name: String) {
+        val restaurant = Restaurant(name)
+        restaurantList.add(restaurant)
+        checklistAdapter.notifyItemInserted(restaurantList.size - 1)
+    }
 
-        // Set click listener on the arrow icon
-        arrowIcon.setOnClickListener {
-            toggleChecklist()
+    private fun handleRestaurantSelection(restaurant: Restaurant) {
+        val index = restaurantList.indexOfFirst { it.name == restaurant.name }
+        if (index != -1) {
+            restaurantList[index] = restaurant // Update selection state
+            checklistAdapter.notifyItemChanged(index) // Notify the adapter about the change
         }
     }
-    
+
+    private fun toggleChecklistVisibility() {
+        if (isChecklistVisible) {
+            checklistOverlay.visibility = View.GONE
+            isChecklistVisible = false
+        } else {
+            checklistOverlay.visibility = View.VISIBLE
+            isChecklistVisible = true
+        }
+    }
 
+    // Method to simulate marker selection
+    fun onMarkerClick(restaurantName: String) {
+        addRestaurant(restaurantName)
+        // Show a menu or options for the restaurant here, if needed
+    }
+
     override fun onResume() {
         super.onResume()
-        mapView.onResume()
+        mapContainer.onResume()
     }
 
     override fun onPause() {
         super.onPause()
-        mapView.onPause()
+        mapContainer.onPause()
     }
-}
+    override fun onDestroy() {
+        super.onDestroy()
+        mapContainer.onDetach() // Release resources
+    }
+
+    }
+
+
+
+
+
+
